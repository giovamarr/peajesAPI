2023-12-16 20:43:03 | ERROR | get() takes 2 positional arguments but 3 were given
2023-12-16 20:43:03 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 29, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 16, in create
    cubicle = CubicleRepository().get_by_id(cubicle_id)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\base_repository.py", line 10, in get_by_id
    return self.model.query.get(self.model, _id)
TypeError: get() takes 2 positional arguments but 3 were given

2023-12-16 20:45:36 | ERROR | Payment not valid
2023-12-16 20:45:36 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 29, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 21, in create
    raise PaymentMethodNotFound("Payment not valid")
app.exceptions.exceptions.PaymentMethodNotFound: Payment not valid

2023-12-16 20:45:55 | ERROR | Payment not valid
2023-12-16 20:45:55 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 29, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 21, in create
    raise PaymentMethodNotFound("Payment not valid")
app.exceptions.exceptions.PaymentMethodNotFound: Payment not valid

2023-12-16 20:46:24 | ERROR | Price and type vehicle not match
2023-12-16 20:46:24 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 29, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 25, in create
    raise PriceNotValid("Price and type vehicle not match")
app.exceptions.exceptions.PriceNotValid: Price and type vehicle not match

2023-12-16 20:56:54 | ERROR | Price and type vehicle not match
2023-12-16 20:56:54 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 25, in create
    raise PriceNotValid("Price and type vehicle not match")
app.exceptions.exceptions.PriceNotValid: Price and type vehicle not match

2023-12-16 20:57:01 | ERROR | Payment not valid
2023-12-16 20:57:01 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 21, in create
    raise PaymentMethodNotFound("Payment not valid")
app.exceptions.exceptions.PaymentMethodNotFound: Payment not valid

2023-12-16 20:57:39 | ERROR | Cubicle not valid
2023-12-16 20:57:39 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 18, in create
    raise CubicleNotFound("Cubicle not valid")
app.exceptions.exceptions.CubicleNotFound: Cubicle not valid

2023-12-16 20:58:20 | ERROR | Cubicle not valid
2023-12-16 20:58:20 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 18, in create
    raise CubicleNotFound("Cubicle not valid")
app.exceptions.exceptions.CubicleNotFound: Cubicle not valid

2023-12-16 20:58:59 | ERROR | Cubicle not valid
2023-12-16 20:58:59 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 18, in create
    raise CubicleNotFound("Cubicle not valid")
app.exceptions.exceptions.CubicleNotFound: Cubicle not valid

2023-12-16 20:59:07 | ERROR | Price and type vehicle not match
2023-12-16 20:59:07 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 25, in create
    raise PriceNotValid("Price and type vehicle not match")
app.exceptions.exceptions.PriceNotValid: Price and type vehicle not match

2023-12-16 20:59:40 | ERROR | Price and type vehicle not match
2023-12-16 20:59:40 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 29, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 25, in create
    raise PriceNotValid("Price and type vehicle not match")
app.exceptions.exceptions.PriceNotValid: Price and type vehicle not match

2023-12-17 17:08:31 | ERROR | change_status() got an unexpected keyword argument 'id'
2023-12-17 17:08:31 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\cubicle_controller.py", line 44, in toggle_cubicle
    cubicle = CubicleService().change_status(id = _id, enabled = enabled)
TypeError: change_status() got an unexpected keyword argument 'id'

2023-12-17 17:09:38 | ERROR | change_status() got an unexpected keyword argument 'id'
2023-12-17 17:09:38 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\cubicle_controller.py", line 44, in toggle_cubicle
    cubicle = CubicleService().change_status(id = _id, enabled = enabled)
TypeError: change_status() got an unexpected keyword argument 'id'

2023-12-17 17:18:35 | ERROR | Price and type vehicle not match
2023-12-17 17:18:35 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 29, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 25, in create
    raise PriceNotValid("Price and type vehicle not match")
app.exceptions.exceptions.PriceNotValid: Price and type vehicle not match

2023-12-17 17:21:41 | ERROR | No row was found when one was required
2023-12-17 17:21:41 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 22, in create
    actual_price = PriceRepository().get_by_type_vehicle(type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\payment_repository.py", line 23, in get_by_type_vehicle
    price = self.model.query.filter_by(type_vehicle = type_vehicle).one()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\query.py", line 2798, in one
    return self._iter().one()  # type: ignore
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 1827, in one
    return self._only_one_row(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 760, in _only_one_row
    raise exc.NoResultFound(
sqlalchemy.exc.NoResultFound: No row was found when one was required

2023-12-17 17:24:56 | ERROR | No row was found when one was required
2023-12-17 17:24:56 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 22, in create
    actual_price = PriceRepository().get_by_type_vehicle(type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\payment_repository.py", line 23, in get_by_type_vehicle
    price = self.model.query.filter_by(type_vehicle = type_vehicle).one()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\query.py", line 2798, in one
    return self._iter().one()  # type: ignore
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 1827, in one
    return self._only_one_row(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 760, in _only_one_row
    raise exc.NoResultFound(
sqlalchemy.exc.NoResultFound: No row was found when one was required

2023-12-17 17:25:05 | ERROR | No row was found when one was required
2023-12-17 17:25:05 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 22, in create
    actual_price = PriceRepository().get_by_type_vehicle(type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\payment_repository.py", line 23, in get_by_type_vehicle
    price = self.model.query.filter_by(type_vehicle = type_vehicle).one()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\query.py", line 2798, in one
    return self._iter().one()  # type: ignore
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 1827, in one
    return self._only_one_row(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 760, in _only_one_row
    raise exc.NoResultFound(
sqlalchemy.exc.NoResultFound: No row was found when one was required

2023-12-17 17:25:14 | ERROR | No row was found when one was required
2023-12-17 17:25:14 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 22, in create
    actual_price = PriceRepository().get_by_type_vehicle(type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\payment_repository.py", line 23, in get_by_type_vehicle
    price = self.model.query.filter_by(type_vehicle = type_vehicle).one()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\query.py", line 2798, in one
    return self._iter().one()  # type: ignore
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 1827, in one
    return self._only_one_row(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\result.py", line 760, in _only_one_row
    raise exc.NoResultFound(
sqlalchemy.exc.NoResultFound: No row was found when one was required

2023-12-17 17:31:09 | ERROR | 
2023-12-17 17:31:09 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 21, in create
    raise PaymentMethodNotFound()
app.exceptions.exceptions.PaymentMethodNotFound

2023-12-17 18:29:38 | ERROR | (sqlite3.OperationalError) unable to open database file
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-12-17 18:29:38 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 716, in checkout
    rec = pool._do_get()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 170, in _do_get
    self._dec_overflow()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 167, in _do_get
    return self._create_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 678, in __init__
    self.__connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 903, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlite3.OperationalError: unable to open database file

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 16, in create
    cubicle = CubicleRepository().get_by_id(cubicle_id)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\base_repository.py", line 10, in get_by_id
    return db.session.get(self.model, _id)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\scoping.py", line 1064, in get
    return self._proxied.get(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 3653, in get
    return self._get_impl(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 3833, in _get_impl
    return db_load_fn(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\loading.py", line 690, in load_on_pk_identity
    session.execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2180, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2047, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 1143, in _connection_for_bind
    conn = bind.connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 3268, in connect
    return self._connection_cls(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 716, in checkout
    rec = pool._do_get()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 170, in _do_get
    self._dec_overflow()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 167, in _do_get
    return self._create_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 678, in __init__
    self.__connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 903, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) unable to open database file
(Background on this error at: https://sqlalche.me/e/20/e3q8)

2023-12-17 18:30:39 | ERROR | (sqlite3.OperationalError) unable to open database file
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-12-17 18:30:39 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 716, in checkout
    rec = pool._do_get()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 170, in _do_get
    self._dec_overflow()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 167, in _do_get
    return self._create_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 678, in __init__
    self.__connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 903, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlite3.OperationalError: unable to open database file

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 16, in create
    cubicle = CubicleRepository().get_by_id(cubicle_id)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\base_repository.py", line 10, in get_by_id
    return db.session.get(self.model, _id)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\scoping.py", line 1064, in get
    return self._proxied.get(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 3653, in get
    return self._get_impl(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 3833, in _get_impl
    return db_load_fn(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\loading.py", line 690, in load_on_pk_identity
    session.execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2180, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2047, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 1143, in _connection_for_bind
    conn = bind.connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 3268, in connect
    return self._connection_cls(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 716, in checkout
    rec = pool._do_get()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 170, in _do_get
    self._dec_overflow()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\impl.py", line 167, in _do_get
    return self._create_connection()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 678, in __init__
    self.__connect()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 903, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\pool\base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) unable to open database file
(Background on this error at: https://sqlalche.me/e/20/e3q8)

2023-12-17 18:31:01 | ERROR | (sqlite3.OperationalError) no such table: cubicles
[SQL: SELECT cubicles.id AS cubicles_id, cubicles.name AS cubicles_name, cubicles.date AS cubicles_date, cubicles.enabled AS cubicles_enabled 
FROM cubicles 
WHERE cubicles.id = ?]
[parameters: (1,)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-12-17 18:31:01 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: cubicles

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\payment_controller.py", line 30, in create_payment
    payment = PaymentService().create(cubicle_id = cubicle_id, payment_method_id = payment_method_id, price = price, type_vehicle = type_vehicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\payment_service.py", line 16, in create
    cubicle = CubicleRepository().get_by_id(cubicle_id)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\base_repository.py", line 10, in get_by_id
    return db.session.get(self.model, _id)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\scoping.py", line 1064, in get
    return self._proxied.get(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 3653, in get
    return self._get_impl(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 3833, in _get_impl
    return db_load_fn(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\loading.py", line 690, in load_on_pk_identity
    session.execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: cubicles
[SQL: SELECT cubicles.id AS cubicles_id, cubicles.name AS cubicles_name, cubicles.date AS cubicles_date, cubicles.enabled AS cubicles_enabled 
FROM cubicles 
WHERE cubicles.id = ?]
[parameters: (1,)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

2023-12-17 18:33:47 | ERROR | (sqlite3.OperationalError) no such table: cubicles
[SQL: INSERT INTO cubicles (name, date, enabled) VALUES (?, ?, ?)]
[parameters: ('Cabina 10', '2023-12-17 18:33:47.519544', 1)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-12-17 18:33:47 | ERROR | Traceback (most recent call last):
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: cubicles

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\controllers\cubicle_controller.py", line 30, in create_cubicle
    cubicle = CubicleService().create(name = name)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\services\cubicle_service.py", line 18, in create
    return CubicleRepository().create(cubicle = new_cubicle)
  File "C:\Users\Usuario\Documents\Projects\INI\ini-technical-test\app\repositories\cubicle_repository.py", line 11, in create
    db.session.commit()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\scoping.py", line 598, in commit
    return self._proxied.commit()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 1969, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 1256, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 1231, in _prepare_impl
    self.session.flush()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 4312, in flush
    self._flush(objects)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 4448, in _flush
    transaction.rollback(_capture_exception=True)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\session.py", line 4408, in _flush
    flush_context.execute()
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\orm\persistence.py", line 1226, in _emit_insert_statements
    result = connection.execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Usuario\flask-test\lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: cubicles
[SQL: INSERT INTO cubicles (name, date, enabled) VALUES (?, ?, ?)]
[parameters: ('Cabina 10', '2023-12-17 18:33:47.519544', 1)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

